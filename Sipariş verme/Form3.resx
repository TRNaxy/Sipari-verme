<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>